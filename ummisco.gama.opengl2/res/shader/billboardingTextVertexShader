#if __VERSION__ >= 130
	#define attribute in
	#define varying out
#endif
		
#ifdef GL_ES
	precision mediump float;
	precision mediump int;
#endif
		
uniform mat4    transformationMatrix;
uniform mat4    projectionMatrix;
uniform mat4    modelMatrix;
uniform mat4    viewMatrix;

attribute vec3  attribute_Position;
attribute vec4  attribute_Color;
attribute vec3  attribute_Normal;
attribute vec2  attribute_TextureCoords;

varying vec2    pass_textureCoords;
varying vec4    varying_Color;

void main(void)
{    
    // we apply the layer transformation
    mat4 modelMatrixWithLayerTransfo = transformationMatrix * modelMatrix;
    
    // we reset the rotation
    modelMatrixWithLayerTransfo[0][0] = viewMatrix[0][0];
    modelMatrixWithLayerTransfo[0][1] = viewMatrix[1][0];
    modelMatrixWithLayerTransfo[0][2] = viewMatrix[2][0];
    modelMatrixWithLayerTransfo[1][0] = viewMatrix[0][1];
    modelMatrixWithLayerTransfo[1][1] = viewMatrix[1][1];
    modelMatrixWithLayerTransfo[1][2] = viewMatrix[2][1];
    modelMatrixWithLayerTransfo[2][0] = viewMatrix[0][2];
    modelMatrixWithLayerTransfo[2][1] = viewMatrix[1][2];
    modelMatrixWithLayerTransfo[2][2] = viewMatrix[2][2];
	
	// we compute the model view matrix
	mat4 MVMatrix = viewMatrix * modelMatrixWithLayerTransfo;
	// we invert the y axis
	MVMatrix[1][1] = -1.0;
	
	gl_Position = projectionMatrix * MVMatrix * vec4(attribute_Position.xy, 0.0, 1.0);
	
	pass_textureCoords = attribute_TextureCoords;
	varying_Color = attribute_Color;
}